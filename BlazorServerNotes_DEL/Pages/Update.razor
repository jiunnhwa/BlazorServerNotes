@page "/update/{RID:int}"

<h1>Updating post "@item.Title"</h1>
<h3>Update</h3>
<EditForm Model="item" OnValidSubmit="UpdatePostAsync">
    <div class="form-group mb-3">
        <label for="itemTitle">Title</label>
        <InputText @bind-Value="item.Title" class="form-control" id="itemTitle" />
    </div>

    <div class="form-group mb-3">
        <label for="itemContent">Content</label>
        <InputText @bind-Value="item.Content" class="form-control" id="itemContent" />
    </div>

    <div class="form-group mb-3">
        <label for="itemRemark">Remark</label>
        <InputText @bind-Value="item.Remark" class="form-control" id="itemRemark" />
    </div>

    <div class="form-group mb-3">
        <label for="itemTags">Tags</label>
        <InputText @bind-Value="item.Tags" class="form-control" id="itemTags" />
    </div>

    <div class="form-group mb-3">
        <label for="itemURL">URL</label>
        <InputText @bind-Value="item.URL" class="form-control" id="itemURL" />
    </div>


    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">
        Update
    </button>

    <button @onclick="@(() => NavigationManager.NavigateTo("/List"))" class="btn btn-secondary">
        Cancel
    </button>
</EditForm>

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@code {
    [Parameter] public int RID { get; set; }

    private Note item = new(); //null;

    protected override async Task OnParametersSetAsync()
    {
        using var context = new NoteDBContext();
        item = await context.Notes.FindAsync(RID);
    }

    private async Task UpdatePostAsync()
    {
        using var context = new NoteDBContext();
        context.Notes.Update(item);

        if (await context.SaveChangesAsync() > 0)
        {
            NavigationManager.NavigateTo("/List");
        }
        else
        {
            string errorMessage = "ERROR: Failed to update post.";
            await JsRuntime.InvokeVoidAsync("alert", errorMessage);
        }
    }
}